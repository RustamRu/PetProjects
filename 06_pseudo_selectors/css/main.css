body {
  font-size: 9px; /* Размер поменялся и у заголовка, и у текста */
  border: 1px solid red;
}

p {
  border: inherit;
}
#pagewrapper {
  font-size: 30px;
}

/* 1) расположение и способ подключения стилей с одинаковым
числом специфичности (вспомните предыдущие занятия, где мы
говорили, что чем ниже стилевое правило, тем оно важнее; а так
же, что важность зависит от способа подключения: inline,
глобальные и связанные таблицы);  */
div .content {
  background: red;
}
div .content::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 3rd entry";
  background-color: red;
}

div .content {
  background-color: lightcoral;
}
div .content::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 4th entry";
  background-color: red;
}

/* 2) теперь придайте этим стилям разное число специфичности
(например, за счет добавления селектора # к одному из правил), сделайте выводы; */
/* 3) перемещайте конкурирующие правила по таблице стилей
вверх/вниз, обратите внимание, что при разном числе
специфичности – расположение не влияет на применимость
правил; */
div#pagewrapper .secondary::after {
  content: "Specifity: 0 (linked), 1, 1, 2";
  background-color: green;
}

div .secondary::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 1st entry";
  background-color: red;
}

div .secondary::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 2nd entry";
  background-color: red;
}

/* 5) убедитесь, что используемый комбинатор (в составных
селекторах ) никак не будут влиять на число специфичности.
Например: #pagewrapper > .content и #pagewrapper .content –
будут иметь одинаковую специфичность, и подчиняться правилу
подключения в каскаде (выше/ниже); */
#pagewrapper > .third::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 1st entry";
  background-color: red;
}
#pagewrapper .third::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 2nd entry";
  background-color: yellow;
}
#pagewrapper > .third::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 2nd entry";
  background-color: green;
}

/* поэкспериментируйте с ключевым словом !important, сделайте
выводы; */
#pagewrapper > .fourth::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 1st entry";
  background-color: green !important;
}
#pagewrapper .fourth::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 2nd entry";
  background-color: red;
}
#pagewrapper > .fourth::after {
  content: "Specifity: 0 (linked), 0, 1, 2; 2nd entry";
  background-color: red;
}

/* поэкспериментируйте с псевдоклассом :not(), сделайте выводы */
.fifth li p.item.not::after {
  content: "Specifity: 0 (linked), 0, 3, 3";
  background-color: green;
}
.fifth li p:not(.item)::after {
  content: "Specifity: 0 (linked), 0, 2, 3";
  background-color: red;
}